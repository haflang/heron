insert x Empty = Branch x Empty Empty
insert x (Branch y t0 t1) = Branch x (insert y t1) t0

and False y = False
and True y = y

size Empty = 0
size (Branch x t0 t1) = size t0 + size t1 + 1

fromList [] = Empty
fromList (x : xs) = insert x (fromList xs)

toList Empty = []
toList (Branch x t0 t1) = x : ilv (toList t0) (toList t1)

ilv [] ys = ys
ilv (x : xs) [] = x : xs
ilv (x : xs) (y : ys) = x : y : ilv xs ys

replicate n x =
  if n == 0
    then []
    else x : replicate (n - 1) x

fromTo n m = case n <= m of
               True -> n : fromTo (n + 1) m
               False -> []

repeat x = x : repeat x

equal [] [] = True
equal [] (y : ys) = False
equal (x : xs) [] = False
equal (x : xs) (y : ys) =
  case (==) x y of
    False -> False
    True -> equal xs ys

prop xs = equal xs (toList (fromList xs))

all p [] = True
all p (x : xs) = and (p x) (all p xs)

int True = 1
int False = 0

main = int (all prop (replicate 2 (fromTo 0 255)))
